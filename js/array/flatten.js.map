{"version":3,"sources":["array/flatten.js"],"names":["flatten","array","r","t","i","concat"],"mappings":";;;;;;;;;;;;;;;;;;sBAIwBA,O;;;;;;;;;;;;AAAT,aAASA,OAAT,CAAiBC,KAAjB,EACf;AAAA,yBADsC,4BAAE,2BAAF,CACtC;;AAAA,uDADiD,wDACjD;;AAAA;;AACI,kCAAO,qDACH,UAACC,CAAD,EAAUC,CAAV,EAAmBC,CAAnB,EAA+BH,KAA/B;AAAA,yBAAG,2BAAH;;AAAA,yBAAY,2BAAZ;;AAAA,yBAAqB,8BAArB;;AAAA,8BAAqC,4BAAE,2BAAF,CAArC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBACIC,EAAEG,MAAF,CAASF,CAAT,CADJ;AAAA,SADG,EACH,gEAAG,2BAAH,oCAAY,2BAAZ,oCAAqB,8BAArB,wCAAqC,4BAAE,2BAAF,CAArC,EADG,GAGH,EAHG,EAILF,KAJK,CAAP;AAKH;;mCAPuBD,O,EAAT,oEAAuB,4BAAE,2BAAF,CAAvB,gCAAgC,4BAAE,2BAAF,CAAhC,E","file":"flatten.js","sourcesContent":["/* @flow */\n\nimport reduce from \"./reduce\";\n\nexport default function flatten(array : any[]) : any[]\n{\n    return reduce(\n        (r : any, t : any, i : number, array : any[]) =>\n            r.concat(t),\n        [],\n    )(array);\n}\n"]}