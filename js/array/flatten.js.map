{"version":3,"sources":["array/flatten.js"],"names":["flatten","array","r","t","i","concat"],"mappings":";;;;;kBAIwBA,O;;AAFxB;;;;;;;;;;AAEe,SAASA,OAAT,CAAiBC,KAAjB,EACf;AAAA,qBADsC,4BAAE,2BAAF,CACtC;;AAAA,mDADiD,wDACjD;;AAAA;;AACI,8BAAO,qDACH,UAACC,CAAD,EAAUC,CAAV,EAAmBC,CAAnB,EAA+BH,KAA/B;AAAA,qBAAG,2BAAH;;AAAA,qBAAY,2BAAZ;;AAAA,qBAAqB,8BAArB;;AAAA,0BAAqC,4BAAE,2BAAF,CAArC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eACIC,EAAEG,MAAF,CAASF,CAAT,CADJ;AAAA,KADG,EACH,gEAAG,2BAAH,oCAAY,2BAAZ,oCAAqB,8BAArB,wCAAqC,4BAAE,2BAAF,CAArC,EADG,GAGH,EAHG,EAILF,KAJK,CAAP;AAKH;;+BAPuBD,O,EAAT,oEAAuB,4BAAE,2BAAF,CAAvB,gCAAgC,4BAAE,2BAAF,CAAhC,E","file":"flatten.js","sourcesContent":["/* @flow */\n\nimport reduce from \"./reduce\";\n\nexport default function flatten(array : any[]) : any[]\n{\n    return reduce(\n        (r : any, t : any, i : number, array : any[]) =>\n            r.concat(t),\n        [],\n    )(array);\n}\n"]}