[{"content":"# createPrivate\n","data":{"source":"class/createPrivate.js"},"excerpt":"","path":"createPrivate"},{"content":"# DataNode\n","data":{"source":"data/DataNode.js"},"excerpt":"","path":"DataNode"},{"content":"# DataType\n","data":{"source":"data/DataType.js"},"excerpt":"","path":"DataType"},{"content":"# @stefanwimmer128/core\n\nComplex features made easy\n\n``` bash\n$ yarn add [-D] @stefanwimmer128/core\n$ npm install [-S|-D] @stefanwimmer128/core\n```\n\n## ES6 import\n\n``` js\nimport * as core from \"@stefanwimmer128/core/es6\";\n\n/* import single feature: */\nimport OptionsParser from \"@stefanwimmer128/core/es6/data/OptionsParser.js\";\n```\n\n## Using [Webpack](https://webpack.js.org/)\n\n``` js\nimport * as core from \"@stefanwimmer128/core\";\n\n/* import single feature: */\nimport OptionsParser from \"@stefanwimmer128/core/data/OptionsParser\";\n```\n\nFor this you have to add the following configuration:\n\n``` js\nmodule.export = {\n    /* ... */\n    resolve: {\n        alias: {\n            \"@stefanwimmer128/core\": \"@stefanwimmer128/core/es6\",\n        },\n    },\n}\n```\n\n## CommonJS require\n\n``` js\nvar core = require(\"@stefanwimmer128/core\");\n\n/* import single feature: */\nvar OptionsParser = require(\"@stefanwimmer128/core/cjs/data/OptionsParser\").default;\n```\n\n## UMD bundle\n\n`dist/core.js` and `dist/core.min.js` are UMD bundles.\n\n``` js\n/* Using AMD require */\nrequire([\n    \"path/to/core.js\",\n], function (core) {\n    /* ... */\n});\n```\n\n``` html\n<!-- Using html <script>-tag -->\n<script src=\"path/to/core.js\"></script>\n```\n\n## Build custom bundle\n\nBuilding custom builds requires bash environment.\n\n``` bash\n$ ./build.sh [filename]:[entry]\n\n# for example:\n$ ./build.sh options:data/OptionsParser\n```\n\nResults can be found in the `dists/` folder (for example: `dists/options.js`).\n","data":{},"excerpt":"","path":"index"},{"content":"# OptionParser\n","data":{"source":"data/OptionParser.js"},"excerpt":"","path":"OptionParser"},{"content":"# OptionsParser\n","data":{"source":"data/OptionsParser.js"},"excerpt":"","path":"OptionsParser"}]